<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-09-03T13:16:45.619Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/09/03/Springboot%20%20%E6%95%B4%E5%90%88mybatis%20%20%E5%88%86%E9%A1%B5%E6%8F%92%E4%BB%B6%20%E5%92%8C%20%E9%80%9A%E7%94%A8Mapper/"/>
    <id>http://yoursite.com/2018/09/03/Springboot  整合mybatis  分页插件 和 通用Mapper/</id>
    <published>2018-09-03T13:17:12.298Z</published>
    <updated>2018-09-03T13:16:45.619Z</updated>
    
    <content type="html"><![CDATA[<h2 id="今日完成"><a href="#今日完成" class="headerlink" title="今日完成"></a>今日完成</h2><p>学习 通用Mapper 和 分页插件 、swaggers 编写 接口文档</p><h4 id="通用-Mapper-和-分页插件"><a href="#通用-Mapper-和-分页插件" class="headerlink" title="通用 Mapper 和 分页插件"></a>通用 Mapper 和 分页插件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">########### Mybatis 自身配置 ##########</span><br><span class="line">mybatis.mapper-locations=classpath:com/jnshu/mapper/*.xml</span><br><span class="line">mybatis.type-aliases-package=com.jnshu.entity</span><br><span class="line">mybatis.configuration.map-underscore-to-camel-case=true</span><br><span class="line"></span><br><span class="line">########### 通用Mapper ##########</span><br><span class="line">## 主键自增回写方法,默认值MYSQL</span><br><span class="line">mapper.i-d-e-n-t-i-t-y=MYSQL</span><br><span class="line">mapper.mappers=com.jnshu.util.MyMapper</span><br><span class="line">## 设置 insert 和 update 中，是否判断字符串类型!=&apos;&apos;</span><br><span class="line">mapper.not-empty=true</span><br><span class="line">## 枚举按简单类型处理</span><br><span class="line">#mapper.enum-as-simple-type=true</span><br><span class="line"></span><br><span class="line">########## 分页插件 ##########</span><br><span class="line">pagehelper.helper-dialect=mysql</span><br><span class="line">pagehelper.params=count=countSql</span><br><span class="line">pagehelper.reasonable=false</span><br><span class="line">pagehelper.support-methods-arguments=true</span><br></pre></td></tr></table></figure><p>使用 MyBatis Generator 自动生成表对应的Model,Mapper以及xml, 该文件位于src/main/resources下面    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE generatorConfiguration</span><br><span class="line">        PUBLIC &quot;-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN&quot;</span><br><span class="line">        &quot;http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd&quot;&gt;</span><br><span class="line">&lt;generatorConfiguration&gt;</span><br><span class="line">    &lt;!--加载配置文件，为下面读取数据库信息准备--&gt;</span><br><span class="line">    &lt;properties resource=&quot;application.properties&quot;/&gt;</span><br><span class="line"></span><br><span class="line">    &lt;context id=&quot;Mysql&quot; targetRuntime=&quot;MyBatis3Simple&quot; defaultModelType=&quot;flat&quot;&gt;</span><br><span class="line"></span><br><span class="line">        &lt;plugin type=&quot;tk.mybatis.mapper.generator.MapperPlugin&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;mappers&quot; value=&quot;com.jnshu.util.MyMapper&quot; /&gt;</span><br><span class="line">            &lt;!--caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true--&gt;</span><br><span class="line">            &lt;property name=&quot;caseSensitive&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/plugin&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!-- 阻止生成自动注释 --&gt;</span><br><span class="line">        &lt;commentGenerator&gt;</span><br><span class="line">            &lt;property name=&quot;javaFileEncoding&quot; value=&quot;UTF-8&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;suppressDate&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;suppressAllComments&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/commentGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--数据库链接地址账号密码--&gt;</span><br><span class="line">        &lt;jdbcConnection driverClass=&quot;$&#123;spring.datasource.driver-class-name&#125;&quot;</span><br><span class="line">                        connectionURL=&quot;$&#123;spring.datasource.url&#125;&quot;</span><br><span class="line">                        userId=&quot;$&#123;spring.datasource.username&#125;&quot;</span><br><span class="line">                        password=&quot;$&#123;spring.datasource.password&#125;&quot;&gt;</span><br><span class="line">        &lt;/jdbcConnection&gt;</span><br><span class="line"></span><br><span class="line">        &lt;javaTypeResolver&gt;</span><br><span class="line">            &lt;property name=&quot;forceBigDecimals&quot; value=&quot;false&quot;/&gt;</span><br><span class="line">        &lt;/javaTypeResolver&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--生成Model类存放位置--&gt;</span><br><span class="line">        &lt;javaModelGenerator targetPackage=&quot;com.jnshu.domain&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">            &lt;property name=&quot;trimStrings&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaModelGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--生成映射文件存放位置--&gt;</span><br><span class="line">        &lt;sqlMapGenerator targetPackage=&quot;mapper&quot; targetProject=&quot;src/main/resources&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/sqlMapGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--生成Dao类存放位置--&gt;</span><br><span class="line">        &lt;!-- 客户端代码，生成易于使用的针对Model对象和XML配置文件 的代码</span><br><span class="line">                type=&quot;ANNOTATEDMAPPER&quot;,生成Java Model 和基于注解的Mapper对象</span><br><span class="line">                type=&quot;XMLMAPPER&quot;,生成SQLMap XML文件和独立的Mapper接口</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;javaClientGenerator type=&quot;XMLMAPPER&quot; targetPackage=&quot;com.jnshu.dao&quot; targetProject=&quot;src/main/java&quot;&gt;</span><br><span class="line">            &lt;property name=&quot;enableSubPackages&quot; value=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/javaClientGenerator&gt;</span><br><span class="line"></span><br><span class="line">        &lt;!--生成对应表及类名</span><br><span class="line">        去掉Mybatis Generator生成的一堆 example</span><br><span class="line">        --&gt;</span><br><span class="line">        &lt;table tableName=&quot;student_info&quot; domainObjectName=&quot;StudentInfo&quot; enableCountByExample=&quot;false&quot;</span><br><span class="line">               enableUpdateByExample=&quot;false&quot; enableDeleteByExample=&quot;false&quot; enableSelectByExample=&quot;false&quot; selectByExampleQueryId=&quot;false&quot;&gt;</span><br><span class="line">            &lt;generatedKey column=&quot;id&quot; sqlStatement=&quot;Mysql&quot; identity=&quot;true&quot;/&gt;</span><br><span class="line">        &lt;/table&gt;</span><br><span class="line">    &lt;/context&gt;</span><br><span class="line">&lt;/generatorConfiguration&gt;</span><br></pre></td></tr></table></figure><p>配置好后，就可以 使用 idea 插件 去生成 代码<br><img src="http://upload-images.jianshu.io/upload_images/5811881-c88221ba256bbc8f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><p><img src="https://upload-images.jianshu.io/upload_images/12791090-3c744f379d889ccc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h5 id="编写-通用-接口-Iservice"><a href="#编写-通用-接口-Iservice" class="headerlink" title="编写 通用 接口 Iservice"></a>编写 通用 接口 Iservice</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @program: chapter1</span><br><span class="line"> * @description: 通用 接口</span><br><span class="line"> * @author: Mr.Lee</span><br><span class="line"> * @create: 2018-08-16 09:39</span><br><span class="line"> **/</span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public interface IService&lt;T&gt;  &#123;</span><br><span class="line">    T selectByKey(Object key);</span><br><span class="line">    int save(T entity);</span><br><span class="line">    int delete(Object key);</span><br><span class="line">    int updateAll(T entity);</span><br><span class="line">    int updateNotNull(T entity);</span><br><span class="line">    List&lt;T&gt; selectByExample(Object example);</span><br><span class="line">    List&lt;T&gt; selectAll();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>具体 实现 通用接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * @program: chapter1</span><br><span class="line"> * @description: 通用 service</span><br><span class="line"> * @author: Mr.Lee</span><br><span class="line"> * @create: 2018-08-16 09:43</span><br><span class="line"> **/</span><br><span class="line">public abstract class BaseService&lt;T&gt; implements IService&lt;T&gt; &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    protected Mapper&lt;T&gt; mapper;</span><br><span class="line">    public Mapper&lt;T&gt; getMapper()&#123;</span><br><span class="line">        return mapper;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public T selectByKey(Object key) &#123;</span><br><span class="line">        // todo 根据主键字段进行查询，方法参数必须包含完整的主键属性，查询条件使用等号</span><br><span class="line">        return mapper.selectByPrimaryKey(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int save(T entity) &#123;</span><br><span class="line">        // todo 保存一个实体，null的属性也会保存，不会使用数据库默认值</span><br><span class="line">        return mapper.insert(entity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int delete(Object key) &#123;</span><br><span class="line">        // todo 根据主键字段进行删除，方法参数必须包含完整的主键属性</span><br><span class="line">        return mapper.deleteByPrimaryKey(key);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int updateAll(T entity) &#123;</span><br><span class="line">        // todo 根据主键更新实体全部字段，null值会被更新</span><br><span class="line">        return mapper.updateByPrimaryKey(entity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public int updateNotNull(T entity) &#123;</span><br><span class="line">        // todo 根据主键更新属性不为null的值</span><br><span class="line">        return mapper.updateByPrimaryKeySelective(entity);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;T&gt; selectByExample(Object example) &#123;</span><br><span class="line">        // todo 根据Example条件进行查询</span><br><span class="line">        // fixme 这个查询支持通过Example类指定查询列，通过selectProperties方法指定查询列</span><br><span class="line">        return mapper.selectByExample(example);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public List&lt;T&gt; selectAll()&#123;</span><br><span class="line">        // todo 查询全部结果，select(null)方法能达到同样的效果</span><br><span class="line">        return mapper.selectAll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="编写-controller"><a href="#编写-controller" class="headerlink" title="编写 controller"></a>编写 controller</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">@Slf4j</span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;students&quot;)</span><br><span class="line">public class StudentController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private StudentServiceImpl studentService;</span><br><span class="line"></span><br><span class="line">    @GetMapping(&quot;/&#123;pn&#125;&quot;)</span><br><span class="line">    public Msg getStudentAll(@RequestParam(value = &quot;pn&quot;,defaultValue = &quot;1&quot;)int pn)&#123;</span><br><span class="line">        PageHelper.startPage(pn,5);</span><br><span class="line">        List&lt;StudentInfo&gt; students= studentService.selectAll();</span><br><span class="line"></span><br><span class="line">        PageInfo info = new PageInfo(students,5);</span><br><span class="line">        return Msg.success().add(&quot;pageInfo&quot;,info);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>页面 </p><p><img src="https://upload-images.jianshu.io/upload_images/12791090-50dc7184e8bfb790.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image"></p><h3 id="swagger-2"><a href="#swagger-2" class="headerlink" title="swagger 2"></a>swagger 2</h3><p>依赖<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--  swagger2  接口文档--&gt;</span><br><span class="line">        &lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.8.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">        &lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --&gt;</span><br><span class="line">        &lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;io.springfox&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;</span><br><span class="line">            &lt;version&gt;2.8.0&lt;/version&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br></pre></td></tr></table></figure></p><h4 id="创建Swagger2配置类"><a href="#创建Swagger2配置类" class="headerlink" title="创建Swagger2配置类"></a>创建Swagger2配置类</h4><p>在Application.java同级创建Swagger2的配置类Swagger2。</p><blockquote><p>通过@Configuration注解，让Spring来加载该类配置。再通过@EnableSwagger2注解来启用Swagger2。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@EnableSwagger2</span><br><span class="line">public class Swagger2 &#123;</span><br><span class="line">    @Bean</span><br><span class="line">    public Docket createRestApi() &#123;</span><br><span class="line">        return new Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .apiInfo(apiInfo())</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(&quot;com.didispace.web&quot;))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private ApiInfo apiInfo() &#123;</span><br><span class="line">        return new ApiInfoBuilder()</span><br><span class="line">                .title(&quot;Spring Boot中使用Swagger2构建RESTful APIs&quot;)</span><br><span class="line">                .description(&quot;接口 文档&quot;)</span><br><span class="line">                .termsOfServiceUrl(&quot;http://localhost:8080/students&quot;)</span><br><span class="line">                .contact(&quot;Lee&quot;)</span><br><span class="line">                .version(&quot;1.0&quot;)</span><br><span class="line">                .build();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;今日完成&quot;&gt;&lt;a href=&quot;#今日完成&quot; class=&quot;headerlink&quot; title=&quot;今日完成&quot;&gt;&lt;/a&gt;今日完成&lt;/h2&gt;&lt;p&gt;学习 通用Mapper 和 分页插件 、swaggers 编写 接口文档&lt;/p&gt;
&lt;h4 id=&quot;通用-Mapper-和-分
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Dubbo学习总结</title>
    <link href="http://yoursite.com/2018/09/03/Dubbo%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/09/03/Dubbo学习总结/</id>
    <published>2018-09-03T05:34:32.000Z</published>
    <updated>2018-09-03T05:49:26.489Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://dubbo.gitbooks.io/dubbo-user-book/content/" target="_blank" rel="noopener"><em>Dubbo文档</em></a></p><h2 id="1、背景"><a href="#1、背景" class="headerlink" title="1、背景"></a>1、背景</h2><blockquote><ul><li>单一应用架构（关键：简化ORM框架）</li><li>垂直应用架构（关键：加速WEB框架（MVC））</li><li>分布式服务架构（将核心业务抽取为服务，形成服务中心关键：提高业务复用，整合分布式服务框架（RPC））</li><li>流动计算架构（当服务增多，需要调度中心管理集群容器，提高利用率，关键：提高机器利用率的调度中心和治理中心（SOA））</li></ul></blockquote><h2 id="2、需求"><a href="#2、需求" class="headerlink" title="2、需求"></a>2、需求</h2><p>未服务化之前，可以通过 RMI 或 Hessian 等工具，简单的暴露和引用远程服务，通过服务的URL地址调用，服务增多后，服务URL配置很难管理，<strong><em>需要一个服务注册中心，动态的注册和发现服务</em></strong></p><p><strong><em>服务间依赖关系错综复杂，需要自动画出应用间的依赖</em></strong></p><p><strong><em>服务的调用变大，服务的容量问题</em></strong></p><h2 id="3、架构思想"><a href="#3、架构思想" class="headerlink" title="3、架构思想"></a>3、架构思想</h2><p><img src="http://dubbo.apache.org/docs/zh-cn/user/sources/images/dubbo-architecture.jpg" alt=""></p><p><strong><em>节点角色说明</em></strong><br>| 节点 | 角色说明 |<br>| :—— | :——: |<br>| Provider | 暴露服务的服务提供方 |<br>| Consumer | 调用远程服务的服务消费方 |<br>| Registry | 服务注册与发现的注册中心 |<br>| Monitor | 统计服务的调用次数和调用时间的监控中心 |<br>| Container | 服务运行容器 |</p><p><strong><em>调用关系说明</em></strong></p><blockquote><ol start="0"><li>服务容器 启动、加载、运行服务提供者</li><li>服务提供者 启动时，向注册中心注册 服务</li><li>服务消费者 启动时，向注册中心订阅 服务</li><li>注册中心返回服务提供者 地址列表给消费者</li><li>从地址列表中通过 软负载均衡算法 选择一个进行调用</li><li>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一些数据到监控中心</li></ol></blockquote><p><a href="https://www.jianshu.com/p/007943cd3b1e" target="_blank" rel="noopener"><strong><em>分布式服务框架Dubbo的架构总结</em></strong></a></p><h2 id="4、快速启动"><a href="#4、快速启动" class="headerlink" title="4、快速启动"></a>4、快速启动</h2><ol><li><a href="http://dubbo.apache.org/zh-cn/docs/user/quick-start.html" target="_blank" rel="noopener">使用 Spirng 配置</a></li><li>利用ali包下 @Service 和 @Reference 注解进行 服务注册和调用<a href="https://github.com/liusxg/springboot-dubbo-zookeeper-demo" target="_blank" rel="noopener"><strong><em>github demo</em></strong></a></li><li><a href="https://github.com/apache/incubator-dubbo-ops" target="_blank" rel="noopener"><strong><em>dubbo-admin 监控</em></strong></a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://dubbo.gitbooks.io/dubbo-user-book/content/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Dubbo文档&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1、背景&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Dubbo学习总结</title>
    <link href="http://yoursite.com/2018/09/03/test/"/>
    <id>http://yoursite.com/2018/09/03/test/</id>
    <published>2018-09-03T05:34:32.000Z</published>
    <updated>2018-09-03T05:49:26.489Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://dubbo.gitbooks.io/dubbo-user-book/content/" target="_blank" rel="noopener"><em>Dubbo文档</em></a></p><h2 id="1、背景"><a href="#1、背景" class="headerlink" title="1、背景"></a>1、背景</h2><blockquote><ul><li>单一应用架构（关键：简化ORM框架）</li><li>垂直应用架构（关键：加速WEB框架（MVC））</li><li>分布式服务架构（将核心业务抽取为服务，形成服务中心关键：提高业务复用，整合分布式服务框架（RPC））</li><li>流动计算架构（当服务增多，需要调度中心管理集群容器，提高利用率，关键：提高机器利用率的调度中心和治理中心（SOA））</li></ul></blockquote><h2 id="2、需求"><a href="#2、需求" class="headerlink" title="2、需求"></a>2、需求</h2><p>未服务化之前，可以通过 RMI 或 Hessian 等工具，简单的暴露和引用远程服务，通过服务的URL地址调用，服务增多后，服务URL配置很难管理，<strong><em>需要一个服务注册中心，动态的注册和发现服务</em></strong></p><p><strong><em>服务间依赖关系错综复杂，需要自动画出应用间的依赖</em></strong></p><p><strong><em>服务的调用变大，服务的容量问题</em></strong></p><h2 id="3、架构思想"><a href="#3、架构思想" class="headerlink" title="3、架构思想"></a>3、架构思想</h2><p><img src="http://dubbo.apache.org/docs/zh-cn/user/sources/images/dubbo-architecture.jpg" alt=""></p><p><strong><em>节点角色说明</em></strong><br>| 节点 | 角色说明 |<br>| :—— | :——: |<br>| Provider | 暴露服务的服务提供方 |<br>| Consumer | 调用远程服务的服务消费方 |<br>| Registry | 服务注册与发现的注册中心 |<br>| Monitor | 统计服务的调用次数和调用时间的监控中心 |<br>| Container | 服务运行容器 |</p><p><strong><em>调用关系说明</em></strong></p><blockquote><ol start="0"><li>服务容器 启动、加载、运行服务提供者</li><li>服务提供者 启动时，向注册中心注册 服务</li><li>服务消费者 启动时，向注册中心订阅 服务</li><li>注册中心返回服务提供者 地址列表给消费者</li><li>从地址列表中通过 软负载均衡算法 选择一个进行调用</li><li>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一些数据到监控中心</li></ol></blockquote><p><a href="https://www.jianshu.com/p/007943cd3b1e" target="_blank" rel="noopener"><strong><em>分布式服务框架Dubbo的架构总结</em></strong></a></p><h2 id="4、快速启动"><a href="#4、快速启动" class="headerlink" title="4、快速启动"></a>4、快速启动</h2><ol><li><a href="http://dubbo.apache.org/zh-cn/docs/user/quick-start.html" target="_blank" rel="noopener">使用 Spirng 配置</a></li><li>利用ali包下 @Service 和 @Reference 注解进行 服务注册和调用<a href="https://github.com/liusxg/springboot-dubbo-zookeeper-demo" target="_blank" rel="noopener"><strong><em>github demo</em></strong></a></li><li><a href="https://github.com/apache/incubator-dubbo-ops" target="_blank" rel="noopener"><strong><em>dubbo-admin 监控</em></strong></a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://dubbo.gitbooks.io/dubbo-user-book/content/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;&lt;em&gt;Dubbo文档&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;1、背景&quot;&gt;&lt;a hre
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/09/01/hello-world/"/>
    <id>http://yoursite.com/2018/09/01/hello-world/</id>
    <published>2018-09-01T15:38:47.565Z</published>
    <updated>2018-09-01T15:38:47.567Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
